<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[Docker] Docker安装与常用命令</title>
      <link href="/article/docker-install/"/>
      <url>/article/docker-install/</url>
      
        <content type="html"><![CDATA[<p>Docker官网：  https://hub.docker.com/</p><p>Docker中文镜像网：http://hub.daocloud.io/</p><h2 id="docker安装">Docker安装</h2><blockquote><p>环境准备</p></blockquote><ol><li>需要会一点点Linux基础</li><li>CentOS7</li></ol><blockquote><p>环境查看</p></blockquote><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"> #</span><span class="bash"> 查看系统内核</span></span><br><span class="line">[root@iZ2zeheduaqlfxyl598si8Z /]# uname -r</span><br><span class="line">3.10.0-1062.18.1.el7.x86_64</span><br></pre></td></tr></table></figure></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">系统版本</span></span><br><span class="line">[root@CZP ~]# cat /etc/os-release</span><br><span class="line">NAME="CentOS Linux"</span><br><span class="line">VERSION="7 (Core)"</span><br><span class="line">ID="centos"</span><br><span class="line">ID_LIKE="rhel fedora"</span><br><span class="line">VERSION_ID="7"</span><br><span class="line">PRETTY_NAME="CentOS Linux 7 (Core)"</span><br><span class="line">ANSI_COLOR="0;31"</span><br><span class="line">CPE_NAME="cpe:/o:centos:centos:7"</span><br><span class="line">HOME_URL="https://www.centos.org/"</span><br><span class="line">BUG_REPORT_URL="https://bugs.centos.org/"</span><br><span class="line"></span><br><span class="line">CENTOS_MANTISBT_PROJECT="CentOS-7"</span><br><span class="line">CENTOS_MANTISBT_PROJECT_VERSION="7"</span><br><span class="line">REDHAT_SUPPORT_PRODUCT="centos"</span><br><span class="line">REDHAT_SUPPORT_PRODUCT_VERSION="7"</span><br></pre></td></tr></table></figure></p><blockquote><p>安装Docker</p></blockquote><h3 id="卸载旧的版本">卸载旧的版本</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo yum remove docker \</span></span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></table></figure></p><p>​</p><h3 id="需要安装的包">需要安装的包</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">3. 设置镜像仓库</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">yum-config-manager \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    --add-repo \</span></span><br><span class="line"><span class="meta">#</span><span class="bash">    https://download.docker.com/linux/centos/docker-ce.repo <span class="comment">#默认是国外的</span></span></span><br><span class="line"></span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo #推荐使用</span><br><span class="line"><span class="meta">#</span><span class="bash">更新yum软件包索引</span></span><br><span class="line">yum makecache fast</span><br><span class="line"><span class="meta">#</span><span class="bash">安装docker    </span></span><br><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io </span><br><span class="line"><span class="meta">#</span><span class="bash">启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta">#</span><span class="bash">查看docker版本</span></span><br><span class="line">docker version</span><br></pre></td></tr></table></figure></p><blockquote><p>下载镜像</p><p>docker pull [要下载的软件]</p></blockquote><blockquote><p>查看下载的镜像</p><p>docker images</p></blockquote><h3 id="卸载docker">卸载docker</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker-ce docker-ce-cli containerd.io</span><br><span class="line"></span><br><span class="line">rm -rf /var/lib/docker#docker默认工作路径</span><br></pre></td></tr></table></figure></p><h3 id="阿里云配置docker镜像加速">阿里云配置Docker镜像加速</h3><p>&lt;img src=&quot;docker-install/image-20200704205412073.png&quot; alt=&quot;image-20200704205412073&quot; style=&quot;zoom: 80%;&quot; /&gt;</p><blockquote><p>执行命令</p></blockquote><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line"></span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["阿里云镜像加速地址"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure></p><p><img src="/article/docker-install/20200619182635129.png" alt="在这里插入图片描述"></p><h2 id="docker的常用命令">Docker的常用命令</h2><h3 id="帮助命令">帮助命令</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker version #docker版本 </span><br><span class="line">docker info #显示docker的系统信息,包括镜像和容器的数量</span><br><span class="line">docker [命令] --help  #查看某个具体的命令</span><br></pre></td></tr></table></figure></p><h3 id="镜像命令">镜像命令</h3><blockquote><p>docker images  查看下载的所有镜像</p></blockquote><p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># docker images</span><br><span class="line">REPOSITORY                TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mysql                     5.6                 8de95e6026c3        20 hours ago        302MB</span><br><span class="line">redis                     latest              36304d3b4540        12 days ago         104MB</span><br><span class="line">mysql                     latest              30f937e841c8        2 weeks ago         541MB</span><br><span class="line">centos/mysql-57-centos7   latest              f83a2938370c        8 months ago        452MB</span><br><span class="line"></span><br><span class="line"># 解释</span><br><span class="line">REPOSITORY 镜像的仓库名</span><br><span class="line">TAG 镜像的标签</span><br><span class="line">IMAGE ID 镜像ID</span><br><span class="line">CREATED 镜像创建时间</span><br><span class="line">SIZE 镜像的大小</span><br><span class="line">#可选项</span><br><span class="line">Options:</span><br><span class="line">  -a, --all             #列出所有镜像</span><br><span class="line">  -q, --quiet           #只显示镜像ID</span><br></pre></td></tr></table></figure></p><blockquote><p>docker search 搜索镜像</p></blockquote><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@CZP ~]# docker search mysql</span><br><span class="line">NAMEDESCRIPTIONSTARSOFFICIALAUTOMATED</span><br><span class="line">mysqlMySQL is a widely used, open-source relation…  9604     [OK]                </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">可选项,通过收藏来过滤</span></span><br><span class="line">--filter=stars=3000 #搜索出来的镜像收藏就是大于3000的</span><br></pre></td></tr></table></figure></p><blockquote><p>docker pull 下载镜像</p></blockquote><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@CZP ~]# docker pull nginx [:tag]</span><br><span class="line">Using default tag: latest #如果不写tag 默认使用最新版本</span><br><span class="line">latest: Pulling from library/nginx</span><br><span class="line">8559a31e96f4: Pull complete  #分层下载,docker image核心 联合文件系统</span><br><span class="line">8d69e59170f7: Pull complete </span><br><span class="line">3f9f1ec1d262: Pull complete </span><br><span class="line">d1f5ff4f210d: Pull complete </span><br><span class="line">1e22bfa8652e: Pull complete </span><br><span class="line">Digest: sha256:21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133 #签名</span><br><span class="line">Status: Downloaded newer image for nginx:latest</span><br><span class="line">docker.io/library/nginx:latest #真实地址</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker pull nginx 等价于 dicker pull docker.io/library/nginx:latest</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">指定版本下载</span></span><br></pre></td></tr></table></figure></p><blockquote><p>docker rmi 删除镜像</p></blockquote><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">删除指定的容器</span></span><br><span class="line">[root@CZP ~]# docker rm -f 8de95e6026c3 </span><br><span class="line"><span class="meta">#</span><span class="bash">删除全部的容器</span></span><br><span class="line">[root@CZP ~]# docker rm -f $(docker -ap)</span><br></pre></td></tr></table></figure></p><h3 id="容器命令">容器命令</h3><p><strong>说明 : 有了镜像才可以创建容器,</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [image]</span><br></pre></td></tr></table></figure></p><p><strong>新建容器并启动</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run  [可选参数] image</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">参数说明</span></span><br><span class="line">--name=""  容器名字 用于区分容器</span><br><span class="line">-d         后台方式运行</span><br><span class="line">-it        使用交互方式运行,进入容器查看内容</span><br><span class="line">-p       指定容器的端口 -p 80:8080  主机端口:容器端口</span><br><span class="line">-P(大写)    随机指定端口</span><br></pre></td></tr></table></figure></p><p><img src="/article/docker-install/20200619182705744.png" alt="在这里插入图片描述"></p><p><strong>列出所有运行的容器</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exit #直接容器停止并退出</span><br><span class="line">ctrl + p + q #直接退出容器</span><br></pre></td></tr></table></figure></p><p><strong>删除容器</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器id</span><br><span class="line">docker rm -f[递归] $(docker ps -aq) #递归删除所有的容器</span><br><span class="line">docker ps -a | xargs docker rm #递归删除所有的容器</span><br></pre></td></tr></table></figure></p><p><strong>启动和停止容器的操作</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器id  #启动容器</span><br><span class="line">docker restart 容器id  #重启容器</span><br><span class="line">docker stop 容器id#停止当前正在运行的容器</span><br><span class="line">docker kill 容器id #强制停止当前容器</span><br></pre></td></tr></table></figure></p><p><strong>查看日志</strong></p><p><img src="/article/docker-install/image-20200704211148370.png" alt="image-20200704211148370"></p><p><strong>查看容器中进程信息</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker top 容器id </span><br><span class="line">[root@CZP ~]# docker top 63d4c4115212</span><br><span class="line">UID                 PID                 PPID                C                   STIME </span><br><span class="line">polkitd             2319                2301                0                   12:33</span><br></pre></td></tr></table></figure></p><p><strong>查看镜像元数据</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">命令</span></span><br><span class="line">docker inspect 容器id  </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">测试</span></span><br><span class="line">[root@CZP ~]*# docker inspect 63d4c4115212*</span><br></pre></td></tr></table></figure></p><p><strong>进入当前正在运行的容器</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">我们通常容器都是使用后台方式运行的,需要进入容器,修改一些配置</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">命令</span></span><br><span class="line">docker exec -it 容器id  bashshell 默认命令行</span><br><span class="line"></span><br><span class="line">docker attach 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">docker <span class="built_in">exec</span> <span class="comment"># 进入容器后开启一个新的终端,可以在里面操作(常用)</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">docker attach <span class="comment"># 进入容器正在执行的终端,不会启动新的进程</span></span></span><br></pre></td></tr></table></figure></p><p><strong>从容器内拷贝文件到主机上</strong></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp 容器id: 容器内路径 目的主机路径</span><br></pre></td></tr></table></figure></p><p><strong>小结</strong></p><p><img src="/article/docker-install/20200619182742864.png" alt="在这里插入图片描述"></p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">attach      Attach  to a running container # 进入容器内部,不启动新的进程</span><br><span class="line">build       Build an image from a Dockerfile # 通过dockerfile 定制镜像</span><br><span class="line">commit      Create a new image from a container's changes #提交当前容器为新的镜像</span><br><span class="line">cp          Copy files/folders between a container and the local filesystem #从容器中拷贝指定的文件或者目录到宿主机上</span><br><span class="line">create      Create a new container # 创建一个新的容器,同run 但不启动容器</span><br><span class="line">diff        Inspect changeson a container's filesystem # 查看docker容器变化</span><br><span class="line">events      Get real time events from the server# 从docker服务获取容器实时事件</span><br><span class="line">exec        Run a command in a running container# 在已存在的容器上运行命令</span><br><span class="line">export      Export a container's filesystem as a tar archive</span><br><span class="line">history     Show the history of an image</span><br><span class="line">images      List images</span><br><span class="line">import      Import the contents from a tarball to create a filesystem image</span><br><span class="line">info        Display system-wide information</span><br><span class="line">inspect     Return low-level information on Docker objects</span><br><span class="line">kill        Kill one or more running containers</span><br><span class="line">load        Load an image from a tar archive or STDIN</span><br><span class="line">login       Log in to a Docker registry</span><br><span class="line">logout      Log out from a Docker registry</span><br><span class="line">logs        Fetch the logs of a container</span><br><span class="line">pause       Pause all processes within one or more containers</span><br><span class="line">port        List port mappings or a specific mapping for the container</span><br><span class="line">ps          List containers</span><br><span class="line">pull        Pull an image or a repository from a registry</span><br><span class="line">push        Push an image or a repository to a registry</span><br><span class="line">rename      Rename a container</span><br><span class="line">restart     Restart one or more containers</span><br><span class="line">rm          Remove one or more containers</span><br><span class="line">rmi         Remove one or more images</span><br><span class="line">run         Run a command in a new container</span><br><span class="line">save        Save one or more images to a tar archive (streamed to STDOUT by default)</span><br><span class="line">search      Search the Docker Hub for images</span><br><span class="line">start       Start one or more stopped containers</span><br><span class="line">stats       Display a live stream of container(s) resource usage statistics</span><br><span class="line">stop        Stop one or more running containers</span><br><span class="line">tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE</span><br><span class="line">top         Display the running processes of a container</span><br><span class="line">unpause     Unpause all processes within one or more containers</span><br><span class="line">update      Update configuration of one or more containers</span><br><span class="line">version     Show the Docker version information</span><br><span class="line">wait        Block until one or more containers stop, then print their exit codes</span><br></pre></td></tr></table></figure></p><h3 id="docker-安装nginx">Docker 安装Nginx</h3><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">1. 搜索镜像 search 建议大家去docker搜索，可以看到帮助文档</span></span><br><span class="line"><span class="meta">#</span><span class="bash">2. 拉取镜像 pull</span></span><br><span class="line"><span class="meta">#</span><span class="bash">3、运行测试</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -d 后台运行</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --name 给容器命名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> -p 宿主机端口：容器内部端口</span></span><br><span class="line">➜  ~ docker run -d --name nginx00 -p 82:80 nginx</span><br><span class="line">75943663c116f5ed006a0042c42f78e9a1a6a52eba66311666eee12e1c8a4502</span><br><span class="line">➜  ~ docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                NAMES</span><br><span class="line">75943663c116        nginx               "nginx -g 'daemon of…"   41 seconds ago      Up 40 seconds       0.0.0.0:82-&gt;80/tcp   nginx00</span><br><span class="line">➜  ~ curl localhost:82   #测试</span><br><span class="line">&lt;!DOCTYPE html&gt;,,,,</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Docker] CICD 持续集成 Devops</title>
      <link href="/article/docker-ci-cd/"/>
      <url>/article/docker-ci-cd/</url>
      
        <content type="html"><![CDATA[<p><strong>Docker2 CICD 持续集成 Devops</strong></p><h2 id="一-简介">一、简介</h2><h3 id="1-devops-介绍">1、Devops 介绍</h3>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Docker] 架构原理</title>
      <link href="/article/docker/"/>
      <url>/article/docker/</url>
      
        <content type="html"><![CDATA[<p><strong>Docker1 架构原理</strong></p><h2 id="一-简介">一、简介</h2><h3 id="1-了解docker的前生lxc">1、了解docker的前生LXC</h3><p>LXC为Linux Container的简写。可以提供轻量级的虚拟化，以便隔离进程和资源，而且不需要提供指令解释机制以及全虚拟化的其他复杂性。相当于C++中的NameSpace。容器有效地将由单个操作系统管理的资源划分到孤立的组中，以更好地在孤立的组之间平衡有冲突的资源使用需求。</p><p>与传统虚拟化技术相比，它的优势在于：</p><p>（1）与宿主机使用同一个内核，性能损耗小；</p><p>（2）不需要指令级模拟；</p><p>（3）不需要即时(Just-in-time)编译；</p><p>（4）容器可以在CPU核心的本地运行指令，不需要任何专门的解释机制；</p><p>（5）避免了准虚拟化和系统调用替换中的复杂性；</p><p>（ 6）轻量级隔离，在隔离的同时还提供共享机制，以实现容器与宿主机的资源共享。</p><p>总结：Linux Container是一种轻量级的虚拟化的手段。</p><p>Linux Container提供了在单一可控主机节点上支持多个相互隔离的server container同时执行的机制。Linux Container有点像chroot，提供了一个拥有自己进程和网络空间的虚拟环境，但又有别于虚拟机，因为lxc是一种操作系统层次上的资源的虚拟化。</p><h3 id="2-lxc与docker什么关系">2、LXC与docker什么关系？</h3><p>docker并不是LXC替代品，docker底层使用了LXC来实现，LXC将linux进程沙盒化，使得进程之间相互隔离，并且能够控制各进程的资源分配。</p><p>在LXC的基础之上，docker提供了一系列更强大的功能。</p><h3 id="3-什么是docker">3、什么是docker</h3><p>docker是一个开源的应用容器引擎，基于go语言开发并遵循了apache2.0协议开源。</p><p>docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的linux服务器，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类iphone的app），并且容器开销极其低。</p><h3 id="4-docker官方文档">4、docker官方文档</h3><p>https://docs.docker.com/</p><h3 id="5-为什么docker越来越受欢迎">5、为什么docker越来越受欢迎</h3><p><strong>因为容器是：</strong></p><ul><li>灵活：即使是最复杂的应用也可以集装箱化。</li><li>轻量级：容器利用并共享主机内核。</li><li>可互换：您可以即时部署更新和升级。</li><li>便携式：您可以在本地构建，部署到云，并在任何地方运行。</li><li>可扩展：您可以增加并自动分发容器副本。</li><li>可堆叠：您可以垂直和即时堆叠服务。</li></ul><p><strong>镜像和容器（contalners）</strong></p><p>通过镜像启动一个容器，一个镜像是一个可执行的包，其中包括运行应用程序所需要的所有内容包含代码，运行时间，库、环境变量、和配置文件。</p><p>容器是镜像的运行实例，当被运行时有镜像状态和用户进程，可以使用docker ps 查看</p><p><strong>容器和虚拟机</strong></p><p>容器时在linux上本机运行，并与其他容器共享主机的内核，它运行的一个独立的进程，不占用其他任何可执行文件的内存，非常轻量</p><p>虚拟机运行的是一个完成的操作系统，通过虚拟机管理程序对主机资源进行虚拟访问，相比之下需要的资源更多</p><p><img src="/article/docker/1464965-20190725162103819-1664036221.jpg" alt="1464965-20190725162103819-1664036221"></p><h3 id="6-docker版本">6、docker版本</h3><p>Docker Community Edition（CE）社区版</p><p>Enterprise Edition(EE) 商业版</p><h3 id="7-docker和openstack的几项对比">7、docker和openstack的几项对比</h3><p><img src="/article/docker/1464965-20190725163201933-1522934949.png" alt="alt"></p><h3 id="8-容器在内核中支持2种重要技术">8、容器在内核中支持2种重要技术</h3><p>docker本质就是宿主机的一个进程，docker是通过namespace实现资源隔离，通过cgroup实现资源限制，通过写时复制技术（copy-on-write）实现了高效的文件操作（类似虚拟机的磁盘比如分配500g并不是实际占用物理磁盘500g）</p><blockquote><p>1.namespaces 名称空间</p></blockquote><p><img src="/article/docker/1464965-20190725163537468-1471897867.png" alt="img"></p><blockquote><p>2.control Group 控制组</p></blockquote><p>cgroup的特点是：</p><p>cgroup的api以一个伪文件系统的实现方式，用户的程序可以通过文件系统实现cgroup的组件管理cgroup的组件管理操作单元可以细粒度到线程级别，另外用户可以创建和销毁cgroup，从而实现资源载分配和再利用所有资源管理的功能都以子系统的方式实现，接口统一子任务创建之初与其父任务处于同一个cgroup的控制组</p><p>四大功能：</p><p>资源限制：可以对任务使用的资源总额进行限制资源统计：可以统计系统的资源使用量，如cpu时长，内存用量等任务控制：cgroup可以对任务执行挂起、恢复等操作</p><h3 id="9-了解docker三个重要概念">9、了解docker三个重要概念</h3><blockquote><p>1 mage镜像</p></blockquote><p>docker镜像就是一个只读模板，比如，一个镜像可以包含一个完整的centos，里面仅安装apache或用户的其他应用，镜像可以用来创建docker容器，另外docker提供了一个很简单的机制来创建镜像或者更新现有的镜像，用户甚至可以直接从其他人那里下周一个已经做好的镜像来直接使用</p><blockquote><p>2 container容器</p></blockquote><p>docker利用容器来运行应用，容器是从镜像创建的运行实例，它可以被启动，开始、停止、删除、每个容器都是互相隔离的，保证安全的平台，可以吧容器看做是要给简易版的linux环境（包括root用户权限、镜像空间、用户空间和网络空间等）和运行再其中的应用程序</p><blockquote><p>3 repostory仓库</p></blockquote><p>仓库是集中存储镜像文件的沧桑，registry是仓库主从服务器，实际上参考注册服务器上存放着多个仓库，每个仓库中又包含了多个镜像，每个镜像有不同的标签（tag）</p><p>仓库分为两种，公有参考，和私有仓库，最大的公开仓库是docker Hub，存放了数量庞大的镜像供用户下周，国内的docker pool，这里仓库的概念与Git类似，registry可以理解为github这样的托管服务</p><h3 id="10-docker的主要用途">10、docker的主要用途</h3><p>方就是Bulid 、ship、run any app/any where，编译、装载、运行、任何app/在任意地放都能运行</p><p>就是实现了应用的封装、部署、运行的生命周期管理只要在glibc的环境下，都可以运行</p><p><strong>运维生成环境中：docker化</strong></p><p>发布服务不用担心服务器的运行环境，所有的服务器都是自动分配docker，自动部署，自动安装，自动运行</p><p>再不用担心其他服务引擎的磁盘问题，cpu问题，系统问题了</p><p><strong>资源利用更出色</strong></p><p>自动迁移，可以制作镜像，迁移使用自定义的镜像即可迁移，不会出现什么问题</p><p>管理更加方便了</p><h3 id="11-docker改变了什么">11、docker改变了什么</h3><p>面向产品：产品交付</p><p>面向开发：简化环境配置</p><p>面向测试：多版本测试</p><p>面向运维：环境一致性</p><p>面向架构：自动化扩容（微服务）</p>]]></content>
      
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Hexo] Theme Hexo</title>
      <link href="/article/hexo-theme-liangguowen/"/>
      <url>/article/hexo-theme-liangguowen/</url>
      
        <content type="html"><![CDATA[<h1 id="install-hexo">Install Hexo</h1><p>Install Node.js  and Git</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>For Mac</span><br><span class="line">brew install node</span><br><span class="line">brew install git</span><br></pre></td></tr></table></figure></p><p>Install hexo</p><p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>For more:https://hexo.io/zh-cn/index.html</span><br></pre></td></tr></table></figure></p><h1 id="theme-usage">Theme Usage</h1><h2 id="init">Init</h2><hr><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/huweihuang/hexo-theme-huweihuang.git ./hexo-huweihuang</span><br><span class="line"><span class="built_in">cd</span> hexo-huweihuang</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></p><h2 id="modify">Modify</h2><hr><p>Modify <code>_config.yml</code> file with your own info.Especially the section:</p><h3 id="deployment">Deployment</h3><p>Replace to your own repo!<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="sidebar-settings">Sidebar settings</h3><p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>    <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"&lt;your description&gt;"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/&lt;your</span> <span class="string">avatar</span> <span class="string">path&gt;</span></span><br></pre></td></tr></table></figure></p><p>and activate your personal widget you like<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">widgets:</span>         <span class="comment"># here are widget you can use, you can comment out</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br></pre></td></tr></table></figure></p><p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p><h3 id="signature-setup">Signature Setup</h3><p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">signature:</span> <span class="literal">true</span>   <span class="comment"># show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="go-to-top-icon-setup">Go to top icon Setup</h3><p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p><h3 id="post-tag">Post tag</h3><p>You can decide to show post tags or not.<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p><img src="/article/hexo-theme-liangguowen/article/tag.png" alt="home_posts_tag-true"></p><h3 id="markdown-render">Markdown render</h3><p>My markdown render engine plugin is <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>.<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">'“”‘’'</span></span><br></pre></td></tr></table></figure></p><p>and if you want to change the header anchor 'ℬ', you can go to <code>layout/post.ejs</code> to change it.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span>(<span class="string">"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        anchors.options = &#123;</span><br><span class="line">          visible: <span class="string">'hover'</span>,</span><br><span class="line">          placement: <span class="string">'left'</span>,</span><br><span class="line">          icon: ℬ <span class="comment">// this is the header anchor "unicode" icon</span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure></p><h2 id="hexo-basics">Hexo Basics</h2><hr><p>Some hexo command:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo new post <span class="string">"&lt;post name&gt;"</span> <span class="comment"># you can change post to another layout if you want</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate <span class="comment"># generate the static file</span></span><br><span class="line">hexo server <span class="comment"># run hexo in local environment</span></span><br><span class="line">hexo deploy <span class="comment"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure></p><h1 id="have-fun-_">Have fun ^_^</h1><hr><p>&lt;!-- Place this tag in your head or just before your close body tag. --&gt;&lt;script async defer src=&quot;https://buttons.github.io/buttons.js&quot;&gt;&lt;/script&gt;&lt;!-- Place this tag where you want the button to render. --&gt;</p><p>Please &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/huweihuang/hexo-theme-huweihuang&quot; data-icon=&quot;octicon-star&quot; aria-label=&quot;Star huweihuang/hexo-theme-huweihuang on GitHub&quot;&gt;Star&lt;/a&gt; this Project if you like it! &lt;a class=&quot;github-button&quot; href=&quot;https://github.com/huweihuang&quot; aria-label=&quot;Follow @huweihuang on GitHub&quot;&gt;Follow&lt;/a&gt; would also be appreciated!Peace!</p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
